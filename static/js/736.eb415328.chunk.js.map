{"version":3,"file":"static/js/736.eb415328.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QAAS,oCAE5B,IAAMC,EAAW,mCAAG,WAAMC,GAAN,uFACFH,EAAAA,EAAAA,IAAA,sBAAiC,CACtDG,OAAAA,IAFuB,cACnBC,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOXC,EAAW,mCAAG,WAAOC,EAAOJ,GAAd,uFACFH,EAAAA,EAAAA,IAAA,8BAAiCO,GAAS,CAC/DJ,OAAAA,IAFuB,cACnBC,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,wDAOXG,EAAe,mCAAG,WAAOC,EAASN,GAAhB,uFACNH,EAAAA,EAAAA,IAAA,iBAAoBS,GAAW,CACpDN,OAAAA,IAF2B,cACvBC,EADuB,yBAItBA,EAASC,MAJa,2CAAH,wDAOfK,EAAe,mCAAG,WAAOD,EAASN,GAAhB,uFACNH,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAuC,CAC5DN,OAAAA,IAF2B,cACvBC,EADuB,yBAItBA,EAASC,MAJa,2CAAH,wDAOfM,EAAe,mCAAG,WAAOF,EAASN,GAAhB,uFACNH,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAuC,CAC5DN,OAAAA,IAF2B,cACvBC,EADuB,yBAItBA,EAASC,MAJa,2CAAH,uD,4KC/BfO,EAAOC,EAAAA,GAAAA,GAAH,4EAMJC,EAAOD,EAAAA,GAAAA,GAAH,6LAOJE,EAAQF,EAAAA,GAAAA,IAAH,uGAOLG,EAAUH,EAAAA,GAAAA,IAAH,0DAKPI,EAAQJ,EAAAA,GAAAA,GAAH,mEAKLK,EAAWL,EAAAA,GAAAA,EAAH,4C,mBC4BrB,EAtDa,WACX,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQZ,GAAYa,EAAAA,EAAAA,MAAZb,QAuBR,OArBAc,EAAAA,EAAAA,YAAU,WACR,GAAKd,EAAL,CACA,IAAMe,EAAa,IAAIC,gBACjBtB,EAASqB,EAAWrB,OACpBuB,EAAS,mCAAG,8GAEQhB,EAAAA,EAAAA,IAAgBD,EAASN,GAFjC,OAERwB,EAFQ,OAGdN,EAAQM,EAAQP,MAHF,mDAKK,kBAAf,KAAMQ,KALI,mDAMdC,EAAAA,GAAAA,MAAY,8BANE,yDAAH,qDAYf,OAFAH,IAEO,WACLF,EAAWM,OACZ,CAjBmB,CAkBrB,GAAE,CAACrB,KAEO,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMW,QAAS,GACpB,iCACE,SAAC,KAAD,CAASC,SAAS,YAAYC,cAAc,KAC5C,SAACrB,EAAD,UACGQ,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,KAAMQ,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACR,UAACvB,EAAD,YACE,SAACC,EAAD,WACE,gBACEuB,IACED,EAAY,yCAC0BA,GAD1B,wDAIdE,IAAKX,OAGT,UAACZ,EAAD,YACE,SAACC,EAAD,UAAQW,KACR,SAACV,EAAD,UAAWkB,SAbJD,EADH,UAqBd,4DAEH,C","sources":["api/api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '687f60735406ee0172c31461de2476ff' };\n\nexport const getTrending = async signal => {\n  const response = await axios.get(`/trending/movie/day`, {\n    signal,\n  });\n  return response.data;\n};\n\nexport const searchMovie = async (query, signal) => {\n  const response = await axios.get(`/search/movie?query=${query}`, {\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    signal,\n  });\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-align: center;\n`;\n\nexport const Thumb = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  width: 150px;\n  height: 150px;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 4px;\n  width: 142px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 12px;\n  margin-bottom: 4px;\n`;\n\nexport const SubTitle = styled.p`\n  font-size: 12px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'api/api';\nimport { List, Item, Thumb, Wrapper, Title, SubTitle } from './Cast.styled';\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchData = async () => {\n      try {\n        const credits = await getMovieCredits(movieId, signal);\n        setCast(credits.cast);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n        toast.error('Oops, something went wrong');\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return cast?.length > 0 ? (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <List>\n        {cast.map(({ cast_id, name, character, profile_path }) => (\n          <Item key={cast_id}>\n            <Thumb>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : `https://via.placeholder.com/150x150.png?text=No+photo`\n                }\n                alt={name}\n              />\n            </Thumb>\n            <Wrapper>\n              <Title>{name}</Title>\n              <SubTitle>{character}</SubTitle>\n            </Wrapper>\n          </Item>\n        ))}\n      </List>\n    </>\n  ) : (\n    <p>We don`t have cast for this movie</p>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","api_key","getTrending","signal","response","data","searchMovie","query","getMovieDetails","movieId","getMovieCredits","getMovieReviews","List","styled","Item","Thumb","Wrapper","Title","SubTitle","useState","cast","setCast","useParams","useEffect","controller","AbortController","fetchData","credits","name","toast","abort","length","position","reverseOrder","map","cast_id","character","profile_path","src","alt"],"sourceRoot":""}